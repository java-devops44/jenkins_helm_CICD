pipeline{
    agent any 
    environment{

        VERSION = "${env.BUILD_ID}"
    }

    stages {

        stage('sonar quality check'){
    
            steps{

                script{


                    withSonarQubeEnv(credentialsId: 'soanr_auth') {


                        sh 'mvn clean package sonar:sonar'
                    }
                 }
            }

        }
        stage('sonar quality gates'){

            steps{
                
                script{
                    waitForQualityGate abortPipeline: false, credentialsId: 'soanr_auth'
                }
            }
        }

        stage('Docker Build'){

             steps{

                 script{

                    withCredentials([usernameColonPassword(credentialsId: 'nex09', variable: 'mv')]) {

                        sh 'docket build -t  34.224.90.69:8083/springapps:${ERSION} .'
                        sh 'docker login -u admin -p ${mv} 34.224.90.69:8083'
                        sh 'docker push 34.224.90.69:8083/springapps:${ERSION}'
                        sh 'docker rmi 34.224.90.69:8083/springapps:${ERSION}'

                        
                    }


                 }
           }
        }

    }
}